<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c" xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
    
    <!-- id : 객체를 어떤 이름으로 사용할 것인지 
      class : 어떤 클래스를 객체화 할것인지 (반드시 패키지까지 써줄 것! )-->
    <!-- Exam exam = new NewLecExam();  -->
    <!-- namespace 가 c , p 라고 있는데 
    c는 Constructor 생성자를 나타내는 namespcae고 그 다음은 필드네임
    p는 프로퍼티 즉 setter 를 나타낸다. 다만 여기서 c, p 네임스페이스를 쓰기 위해서는 
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:p="http://www.springframework.org/schema/p" 위에 미리 선언을 해야 한다. 
    -->
    
    <util:properties id = "config" location="spring/properties/config.properties"/>
    
    
    
    <context:component-scan base-package="spring.di.ui, spring.di.entity"></context:component-scan>
    
    
    <!-- <bean id="exam1" class ="spring.di.entity.NewLecExam" p:kor = "10" p:eng="10" p:math="10" p:com="10"/>
    <bean id="exam2" class ="spring.di.entity.NewLecExam" p:kor = "20" p:eng="20" p:math="20" p:com="20"/> -->
    
        <!-- 설정 파일 처리기 추가하는 방법 -->
        
    <!-- Console console = new GridExamConsole();
         console.setExam(exam); 
    -->
    <!-- property는 setExam 함수를 호출하는데 
    name은 set을 생략하여 소문자 이름으로 사용한다.
    즉, name은 setExam의 함수 이름을 가르킨다. -->
    <!-- bean id 는 ref에 써주면 해당 id 가 주입! -->
    <!-- console이라는 bean은 setExam이라는 함수를 반드시 가지고 있어야 함 -->
    
    <!-- <bean id="console" class = "spring.di.ui.GridExamConsole">
        <property name="exam" ref= "exam" />
    </bean> -->
    
    <!-- <util:list id="exams" list-class="java.util.ArrayList">
         <bean class = "spring.di.entity.NewLecExam" p:kor="1"/>
         <ref bean = "exam" />
    </util:list> -->
    
    <!-- ArrayList(Collection c)의 속성을 이용하여 생성자 값으로 
         ArrayList에 Collection을 추가할 수 있음 -->
    <!-- <bean id="exams" class="java.util.ArrayList">
        <constructor-arg>
            <list>
                새로 생성해서 추가하는 방법 (id는 따로 필요 없음)
                <bean class = "spring.di.entity.NewLecExam" p:kor="1"/>
                위에서 추가한 exam 레퍼런스 가져오는 방법 
                <ref bean = "exam" />
            </list>
        </constructor-arg>
    </bean> -->
    
</beans>
